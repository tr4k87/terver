import numpy as np
from scipy import stats

# ЗАДАЧА 1
# Даны значения величины заработной платы заемщиков банка (zp) и значения их поведенческого кредитного скоринга
# (ks):
# zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110],
# ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832].
# Найдите ковариацию этих двух величин с помощью элементарных действий, 
# а затем с помощью функции cov из numpy
# Полученные значения должны быть равны.
# Найдите коэффициент корреляции Пирсона с помощью ковариации и среднеквадратичных отклонений двух признаков, 
# а затем с использованием функций из библиотек numpy и pandas.
# zp = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])
# ks = np.array([401, 574, 874, 919, 459, 739, 653, 902, 746, 832])
# cov = (zp * ks).mean() - zp.mean() * ks.mean()
# pirs = cov / (zp.std() * ks.std())

# print(f'Ковариция ручным способом = {cov}')
# print(f'Ковариация Numpy {np.cov(zp, ks, ddof=0)}')
# print(f'Корреляция Пирсона ручным способом {pirs}')
# print(f'Корреляция Пирсона через Numpy {np.corrcoef(zp, ks)}')

# ЗАДАЧА 2
# Измерены значения IQ выборки студентов,
# обучающихся в местных технических вузах:
# 131, 125, 115, 122, 131, 115, 107, 99, 125, 111.
# Известно, что в генеральной совокупности IQ распределен нормально.
# Найдите доверительный интервал для математического ожидания с надежностью 0.95.

# z = np.array([131, 125, 115, 122, 131, 115, 107, 99, 125, 111])
# m = z.mean()
# D = np.var(z, ddof = 1)
# t = round((stats.t.ppf(0.975, 9)), 2)
# P1 = m - t * np.sqrt(D/len(z))
# P2 = m + t * np.sqrt(D/len(z))
# print(f'Доверительный инстервал с надежностью 0.95 от {round(P1,2)} до {round(P2, 2)}')

# ЗАДАЧА 3
# Известно, что рост футболистов в сборной распределен нормально с дисперсией генеральной совокупности, 
# равной 25 кв.см. Объем выборки равен 27, среднее выборочное составляет 174.2. 
# Найдите доверительный интервал для математического ожидания с надежностью 0.95.

D = 25
n = 27
m = 174.2
t = round((stats.t.ppf(0.975, 26)), 2)
P1 = m - t * np.sqrt(D/n)
P2 = m + t * np.sqrt(D/n)
print(f' Доверительный интервал находится в диапазоне от {round(P1 , 2)} до {round(P2 ,2 )}')